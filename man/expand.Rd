% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate.R
\name{expand}
\alias{expand}
\title{Expand}
\usage{
expand(dt, expand_cols, id_cols)
}
\arguments{
\item{dt}{[\code{data.table()}]\cr
Data set you would like to expand.}

\item{expand_cols}{[\code{list()}]\cr
A named list of vectors, where the name of each vector is a column of \code{dt}
that you would like to expand (or a new column name) and the value within
the vector are the values you want the column to take.
Ex: expand_cols = list(draw = 1:100) would mean you want the returned
data.table to have draws 1 through 100.}

\item{id_cols}{[\code{characher()}]\cr
Columns which uniquely identify rows of \code{dt}. These columns will be copied
over into the expanded rows.}
}
\value{
\code{dt} with added rows for all combinations of
\code{expand_cols} as specified. In new rows, entries of non-ID columns will
be NA.
}
\description{
Expands data.table to dimensions not already present, leaving
value columns NA.
}
\details{
This function is a wrapper for \code{\link[data.table:CJ]{data.table::CJ()}}.

Syntax for example:
\code{dt[CJ(year = 1990:2000, draw = c(1:2), location = "Mexico", unique = T), on = list(location, year)]}
}
\examples{
dt <- data.table::data.table(
  location = c("Mexico"),
  year = c(1990:1995),
  value = c(0:5)
)
dt <- expand(dt, expand_cols = list(year = 1990:2000, draw = c(1:2)),
             id_cols = c("location", "year"))

}
